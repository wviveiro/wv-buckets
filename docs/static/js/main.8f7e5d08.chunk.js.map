{"version":3,"sources":["components/util/status/index.ts","components/global-style/global-style.tsx","components/alert/alert.styled.ts","components/alert/alert.tsx","components/images/btn_google_light_normal_ios.svg","components/util/use-state-status/index.ts","components/ui-components/bottom-modal/bottom-modal.styled.ts","components/ui-components/bottom-modal/bottom-modal.tsx","components/ui-components/bottom-modal/bottom-modal.hook.ts","components/ui-components/confirm-modal/confirm-modal.tsx","components/redux/slices/accounts/index.ts","components/redux/slices/auth/index.ts","components/redux/store/index.ts","components/login/login.styled.ts","components/global-settings/global-settings.interface.ts","components/global-settings/global-settings.ts","components/schemas/database.interface.ts","components/util/number-to-letter/index.ts","components/sheet-api/sheet-api.ts","components/login/login.tsx","components/login/login.hook.ts","components/ui-components/layout/layout.hook.ts","components/ui-components/layout/layout.styled.ts","components/ui-components/layout/layout.tsx","components/redux/selectors/auth/index.ts","components/router/auth-route.tsx","components/ui-components/bottom-menu/index.tsx","components/ui-components/bottom-menu/bottom-menu.hook.ts","components/redux/selectors/accounts/accounts.selectors.ts","components/accounts/modal-add-account/modal-add-account.interface.ts","components/schemas/wvbuckets/wvbuckets.interface.ts","components/schemas/database.service.ts","components/redux/selectors/accounts/accounts.helpers.ts","components/redux/selectors/accounts/accounts.hooks.ts","components/accounts/account/account.styled.ts","components/accounts/account/account.tsx","components/accounts/account/account.hook.ts","components/ui-components/row-modal/row-modal.hook.ts","components/accounts/accounts.service.ts","components/accounts/accounts.hook.ts","components/accounts/accounts.styled.ts","components/accounts/modal-add-account/modal-add-account.hook.ts","components/accounts/modal-add-account/modal-add-account.tsx","components/accounts/no-account/no-account.styled.ts","components/accounts/no-account/no-account.tsx","components/accounts/accounts.tsx","components/router/routes.tsx","components/settings/settings.styled.ts","components/settings/settings.tsx","components/settings/settings.hook.ts","components/splash-screen/splash-screen.styled.ts","components/splash-screen/splash-screen.tsx","components/app/main/index.tsx","components/app/main/main.hook.ts","components/ui-components/black-modal/black-modal.styled.ts","components/ui-components/black-modal/black-modal.tsx","components/ui-components/black-modal/black-modal.hook.ts","components/ui-components/row-modal/context/row-modal-context.tsx","components/ui-components/row-modal/row-modal.styled.ts","components/ui-components/toggler/toggler.styled.ts","components/ui-components/toggler/toggler.tsx","components/ui-components/row-modal/views/main/main.tsx","components/ui-components/row-modal/row-modal.tsx","components/app/app.tsx","reportWebVitals.js","index.tsx"],"names":["Status","GlobalStyle","createGlobalStyle","props","theme","device","padding","colors","primary","danger","background","background2","textWhite","textBlack","gray","gray2","paddingBottom","paddingTop","paddingLeft","paddingRight","LayoutTheme","children","AlertComponent","styled","Alert","setAlert","message","AlertsCreator","useState","alerts","setAlerts","useEffect","mounted","alert","console","error","_alerts","slice","push","variant","map","i","onClose","index","splice","InnerAlert","show","setShow","setTimeout","onClick","style","position","bottom","_desc","_defs","_g","useStateStatus","state","useCreateState","status","initializing","_state","setState","disabled","loaded","BottomModalContainerInner","div","BottomModalTitleContainer","h2","BottomModalDisclaimer","p","BottomModalContainer","css","BottomModalButton","button","BottomModal","className","onOpen","useBottomModalState","classNames","isMenu","menu","row","href","label","to","components","Title","Disclaimer","Button","Object","assign","initialState","title","description","confirmText","cancelText","confirmVariant","cancelVariant","closed","onCancel","onConfirm","args","ConfirmModal","ev","isDefaultPrevented","isPropagationStopped","accountsAdapter","createEntityAdapter","selectId","account","spreadsheetId","accountSlice","createSlice","name","getInitialState","reducers","importAccounts","action","accounts","payload","initialised","loading","upsertMany","startLoadingAccount","entity","entities","loadAccounts","removeAccount","removeOne","actions","authSlice","authenticated","signedin","setAuth","prototype","hasOwnProperty","call","store","configureStore","reducer","auth","LoginContainer","LoginButtton","_excluded","_extends","target","arguments","length","source","key","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","SvgBtnGoogleLightNormalIos","_ref","svgRef","titleId","viewBox","xmlns","xmlnsXlink","ref","undefined","id","x","y","width","height","dx","dy","in","result","stdDeviation","values","rx","fill","fillRule","transform","filter","xlinkHref","d","GlobalEnum","ForwardRef","EnumSchemas","getGlobalSettings","defaultSettings","apikey","client_id","spid","strGlobalSettings","localStorage","getItem","globalSettings","JSON","parse","setGlobalSettings","setItem","stringify","saveGlobalSettings","numberToLetter","num","s","t","String","fromCharCode","treatGoogleAPIError","details","authenticate","a","gapi","Error","Promise","resolve","reject","init","client","discoveryDocs","clientId","scope","load","_subscriptions","subscribeUserSignedStatus","callback","auth2","getAuthInstance","isSignedIn","listen","forEach","_cb","getSpreadsheetDetails","sheets","spreadsheets","get","fields","createSheet","columns","batchUpdate","resource","requests","addSheet","properties","addSheetRows","replies","sheetId","rows","append","range","valueInputOption","getSheetRows","paramArgs","from","noLimit","limit","lastColumn","diff","createSpreadsheet","create","response","Login","onLogin","signIn","useLoginState","useLayoutState","sideMenu","window","innerWidth","onResize","addEventListener","removeEventListener","toggleSideMenu","onSignout","signOut","confirmDeleteSettings","removeItem","location","reload","LayoutContainer","Layout","icon","faBars","right","faCaretLeft","process","selectAuth","AuthRoute","component","rest","render","AuthComponent","Component","useSelector","BottomMenu","setClosed","useLayoutEffect","useBottomMenuState","selectAccounts","ModalAddAccountErrors","Schemas","WVBUCKET","schema","date","amount","type","category","initialiseDatabase","spreadsheetIds","reduce","acc","curr","schemas","Schema","entries","entry","v","replace","isNaN","getAccountDetails","getAccount","getAccountRows","balance","getAccountBalance","buckets","ids","includes","sort","getAccountBuckets","useAccountDetails","useMemo","AccountContainer","Account","onShowMenu","dispatch","useDispatch","main","AccountState","faCreditCard","toLocaleString","faEllipsisH","rowController","open","onAddAccount","settings","accountExists","find","useAccountsState","typeCreation","useParams","showMenu","setShowMenu","onSetShowMenu","onClickDelete","onDeleteAccount","onAddRowModal","account_id","AccountsContainer","ModalAddAccount","history","useHistory","url","onImport","trim","missingUrl","found","match","invalidUrl","hasError","onCreateAccount","onModalClose","handleCreateButton","onChangeValue","value","useModalAddAccountState","Form","Group","Control","placeholder","onChange","Feedback","display","NoAccountContainer","NoAccount","faMoneyCheckAlt","Main","Router","path","SettingsContainer","Container","Settings","onChangeClient","onSave","useSettingsState","rel","Label","SplashScreenContainer","SplashScreen","hasSpinner","faFan","spin","useCallback","notAuthenticated","then","catch","reason","useMainState","BlackModalContainer","BlackModalTitle","BlackModal","setRender","useBlackModalState","leftButton","rightButton","RowModalContext","React","createContext","view","typeOptions","decimal","integer","onSelectType","onKeyPressAmount","onSetDescription","RowModalContainer","TogglerContainer","options","left","findIndex","option","Toggler","containerProps","classes","onClickOption","optionContainer","optionButton","RowMainView","useContext","selectedAccount","faTimes","faChevronRight","format","parseISO","onKeyDown","inputMode","RowModal","Date","formatedNumber","stramount","substr","padEnd","useRowModal","Provider","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.8f7e5d08.chunk.js","sourcesContent":["// Enum list of statuses used throughout application\nexport enum Status {\n  initializing = 1,\n  loaded = 2,\n  loading = 3,\n}\n","import React from 'react';\nimport { createGlobalStyle, ThemeProvider } from 'styled-components';\nimport { GlobalStyleTheme } from './global-style.interface';\n\n/**\n * Global CSS\n */\nexport const GlobalStyle = createGlobalStyle`\n    \n    html, body, #root {\n      height: 100%;\n    }\n\n    * {\n        box-sizing: border-box;\n        font-family: 'Open Sans', sans-serif;\n    }\n\n    html {\n      padding: ${(props) => props.theme.device.padding};\n    }\n\n    h1, h2 {\n      font-weight: bold;\n    }\n\n    button, a {\n      border: 0;\n      background: none;\n      text-decoration: none;\n\n      &:focus {\n        outline: none;\n      }\n    }\n\n    .flex {\n      display: flex;\n\n      &.alignCenter {\n        align-items: center;\n      }\n\n      &.justifyCenter {\n        justify-content: center;\n      }\n    }\n  `;\n\n/**\n * Main Theme\n */\nconst theme: GlobalStyleTheme = {\n  colors: {\n    primary: 'var(--bs-primary)',\n    danger: 'var(--bs-danger)',\n    background: 'rgba(130, 145, 255)',\n    background2: 'rgb(28, 28, 28)',\n    textWhite: '#FFF',\n    textBlack: '#000',\n    gray: 'rgba(120, 120, 120, 1)',\n    gray2: 'rgba(255, 255, 255, 0.05)',\n  },\n  device: {\n    padding:\n      'env(safe-area-inset-top) env(safe-area-inset-right) env(safe-area-inset-bottom) env(safe-area-inset-left)',\n    paddingBottom: 'env(safe-area-inset-bottom)',\n    paddingTop: 'env(safe-area-inset-top)',\n    paddingLeft: 'env(safe-area-inset-left)',\n    paddingRight: 'env(safe-area-inset-right)',\n  },\n};\n\n/**\n * Main style and theme of application\n */\nexport const LayoutTheme: React.FC = ({ children }) => {\n  return (\n    <ThemeProvider theme={theme}>\n      <GlobalStyle />\n      {children}\n    </ThemeProvider>\n  );\n};\n","import styled from 'styled-components';\nimport { Alert } from 'react-bootstrap';\n\nexport const AlertComponent = styled(Alert)`\n  position: 'fixed';\n  bottom: 0;\n  width: 100%;\n  z-index: 1051;\n`;\n","import React, { useEffect, useState } from 'react';\nimport { InnerAlertInterface } from './alert.interface';\nimport { AlertComponent } from './alert.styled';\n\nexport let setAlert = (\n  message: string,\n  alert: InnerAlertInterface['variant'] = 'warning'\n) => {\n  // not implemented\n};\n\nexport const AlertsCreator = () => {\n  const [alerts, setAlerts] = useState<Array<InnerAlertInterface>>([]);\n\n  useEffect(() => {\n    let mounted = true;\n    setAlert = (\n      message: string,\n      alert: InnerAlertInterface['variant'] = 'warning'\n    ) => {\n      if (!mounted) return;\n\n      if (typeof message !== 'string') {\n        console.error('Error: ', message);\n        message = 'Invalid error message';\n      }\n\n      const _alerts = alerts.slice(0);\n      _alerts.push({ message, variant: alert });\n      setAlerts(_alerts);\n    };\n\n    return () => {\n      mounted = false;\n    };\n  }, [alerts]);\n\n  const onClose = (index: number) => {\n    return () => {\n      const _alerts = alerts.slice(0);\n      _alerts.splice(index, 1);\n      setAlerts(_alerts);\n    };\n  };\n\n  return (\n    <>\n      {alerts.map((alert, i) => (\n        <InnerAlert key={i} {...alert} onClose={onClose(i)} />\n      ))}\n    </>\n  );\n};\n\nexport const InnerAlert: React.FC<InnerAlertInterface> = ({\n  message,\n  variant,\n  onClose,\n}) => {\n  const [show, setShow] = useState(true);\n\n  useEffect(() => {\n    let mounted = true;\n    setTimeout(() => {\n      if (!mounted) return;\n      setShow(false);\n    }, 3000);\n\n    return () => {\n      mounted = false;\n    };\n  }, []);\n\n  useEffect(() => {\n    let mounted = true;\n    if (!show) {\n      setTimeout(() => {\n        if (!mounted) return;\n        if (onClose) onClose();\n      }, 500);\n    }\n    return () => {\n      mounted = false;\n    };\n  }, [show, onClose]);\n\n  return (\n    <AlertComponent\n      variant={variant}\n      show={show}\n      onClick={() => setShow(false)}\n      style={{ position: 'fixed', bottom: '0' }}\n    >\n      {message}\n    </AlertComponent>\n  );\n};\n","var _desc, _defs, _g;\n\nvar _excluded = [\"title\", \"titleId\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport * as React from \"react\";\n\nfunction SvgBtnGoogleLightNormalIos(_ref, svgRef) {\n  var title = _ref.title,\n      titleId = _ref.titleId,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    viewBox: \"0 0 46 46\",\n    xmlns: \"http://www.w3.org/2000/svg\",\n    xmlnsXlink: \"http://www.w3.org/1999/xlink\",\n    ref: svgRef,\n    \"aria-labelledby\": titleId\n  }, props), title === undefined ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, \"btn_google_light_normal_ios\") : title ? /*#__PURE__*/React.createElement(\"title\", {\n    id: titleId\n  }, title) : null, _desc || (_desc = /*#__PURE__*/React.createElement(\"desc\", null, \"Created with Sketch.\")), _defs || (_defs = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"filter\", {\n    id: \"b\",\n    x: \"-50%\",\n    y: \"-50%\",\n    width: \"200%\",\n    height: \"200%\"\n  }, /*#__PURE__*/React.createElement(\"feOffset\", {\n    dx: 0,\n    dy: 1,\n    in: \"SourceAlpha\",\n    result: \"shadowOffsetOuter1\"\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    in: \"shadowOffsetOuter1\",\n    result: \"shadowBlurOuter1\",\n    stdDeviation: 0.5\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"shadowBlurOuter1\",\n    result: \"shadowMatrixOuter1\",\n    values: \"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.168 0\"\n  }), /*#__PURE__*/React.createElement(\"feOffset\", {\n    dx: 0,\n    dy: 0,\n    in: \"SourceAlpha\",\n    result: \"shadowOffsetOuter2\"\n  }), /*#__PURE__*/React.createElement(\"feGaussianBlur\", {\n    in: \"shadowOffsetOuter2\",\n    result: \"shadowBlurOuter2\",\n    stdDeviation: 0.5\n  }), /*#__PURE__*/React.createElement(\"feColorMatrix\", {\n    in: \"shadowBlurOuter2\",\n    result: \"shadowMatrixOuter2\",\n    values: \"0 0 0 0 0   0 0 0 0 0   0 0 0 0 0  0 0 0 0.084 0\"\n  }), /*#__PURE__*/React.createElement(\"feMerge\", null, /*#__PURE__*/React.createElement(\"feMergeNode\", {\n    in: \"shadowMatrixOuter1\"\n  }), /*#__PURE__*/React.createElement(\"feMergeNode\", {\n    in: \"shadowMatrixOuter2\"\n  }), /*#__PURE__*/React.createElement(\"feMergeNode\", {\n    in: \"SourceGraphic\"\n  }))), /*#__PURE__*/React.createElement(\"rect\", {\n    id: \"a\",\n    width: 40,\n    height: 40,\n    rx: 2\n  }))), _g || (_g = /*#__PURE__*/React.createElement(\"g\", {\n    fill: \"none\",\n    fillRule: \"evenodd\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(-1 -1)\"\n  }, /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(4 4)\",\n    filter: \"url(#b)\"\n  }, /*#__PURE__*/React.createElement(\"use\", {\n    fill: \"#FFFFFF\",\n    fillRule: \"evenodd\",\n    xlinkHref: \"#a\"\n  }), /*#__PURE__*/React.createElement(\"use\", {\n    fill: \"none\",\n    xlinkHref: \"#a\"\n  }), /*#__PURE__*/React.createElement(\"use\", {\n    fill: \"none\",\n    xlinkHref: \"#a\"\n  }), /*#__PURE__*/React.createElement(\"use\", {\n    fill: \"none\",\n    xlinkHref: \"#a\"\n  })), /*#__PURE__*/React.createElement(\"g\", {\n    transform: \"translate(15 15)\"\n  }, /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m17.64 9.2045c0-0.63818-0.057273-1.2518-0.16364-1.8409h-8.4764v3.4814h4.8436c-0.20864 1.125-0.84273 2.0782-1.7959 2.7164v2.2582h2.9086c1.7018-1.5668 2.6836-3.8741 2.6836-6.615z\",\n    fill: \"#4285F4\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m9 18c2.43 0 4.4673-0.80591 5.9564-2.1805l-2.9086-2.2582c-0.80591 0.54-1.8368 0.85909-3.0477 0.85909-2.3441 0-4.3282-1.5832-5.0359-3.7105h-3.0068v2.3318c1.4809 2.9414 4.5245 4.9582 8.0427 4.9582z\",\n    fill: \"#34A853\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m3.9641 10.71c-0.18-0.54-0.28227-1.1168-0.28227-1.71s0.10227-1.17 0.28227-1.71v-2.3318h-3.0068c-0.60955 1.215-0.95727 2.5895-0.95727 4.0418 0 1.4523 0.34773 2.8268 0.95727 4.0418l3.0068-2.3318z\",\n    fill: \"#FBBC05\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m9 3.5795c1.3214 0 2.5077 0.45409 3.4405 1.3459l2.5814-2.5814c-1.5586-1.4523-3.5959-2.3441-6.0218-2.3441-3.5182 0-6.5618 2.0168-8.0427 4.9582l3.0068 2.3318c0.70773-2.1273 2.6918-3.7105 5.0359-3.7105z\",\n    fill: \"#EA4335\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"m0 0h18v18h-18v-18z\"\n  }))))));\n}\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(SvgBtnGoogleLightNormalIos);\nexport default __webpack_public_path__ + \"static/media/btn_google_light_normal_ios.1e32a743.svg\";\nexport { ForwardRef as ReactComponent };","import useCreateState from 'react-hook-setstate';\nimport { Status } from '../status';\n\ntype UseStateStatus<T> = T & {\n  status: Status;\n};\n\nexport type UseStateInterface<T> = UseStateStatus<T> & { disabled: boolean };\n\ntype ReturnUseState<T> = [\n  UseStateInterface<T>,\n  (args: Partial<UseStateStatus<T>>) => void\n];\n\nexport const useStateStatus = <T>(state: T): ReturnUseState<T> => {\n  const [_state, setState] = useCreateState<UseStateStatus<T>>({\n    status: Status.initializing,\n    ...state,\n  });\n  const disabled = _state.status !== Status.loaded;\n\n  return [{ ..._state, disabled }, setState];\n};\n","import styled, { css } from 'styled-components/macro';\nimport {\n  BottomModalButtonProps,\n  BottomModalProps,\n} from './bottom-modal.interface';\n\nexport const bottomModalTransitionMilliseconds = 250;\n\nexport const BottomModalContainerInner = styled.div``;\n\nexport const BottomModalTitleContainer = styled.h2``;\n\nexport const BottomModalDisclaimer = styled.p``;\n\nexport const BottomModalContainer = styled.div<BottomModalProps>`\n  position: fixed;\n  top: 0;\n  bottom: 0;\n  left: 0;\n  right: 0;\n\n  transition: background-color ${bottomModalTransitionMilliseconds}ms linear;\n\n  ${(props) =>\n    props.show\n      ? css`\n          background-color: rgba(0, 0, 0, 0.5);\n        `\n      : css`\n          background-color: transparent;\n        `}\n\n  ${BottomModalTitleContainer} {\n    margin-bottom: 20px;\n  }\n\n  ${BottomModalDisclaimer} {\n    font-style: italic;\n    font-size: 0.85rem;\n    opacity: 0.7;\n  }\n\n  .main-container-menu {\n    position: fixed;\n    width: 100%;\n    bottom: 0;\n    transition: bottom ${bottomModalTransitionMilliseconds}ms linear;\n    ${(props) =>\n      props.show\n        ? css`\n            bottom: 0;\n          `\n        : css`\n            bottom: -100vh;\n          `}\n\n    .main-content-bottom-modal {\n      margin-bottom: 15px;\n    }\n\n    .menu-item {\n      a,\n      button {\n        color: ${(props) => props.theme.colors.primary};\n        border-top: solid 1px #eee;\n        width: 100%;\n        padding: 10px;\n      }\n\n      &.text-danger {\n        a,\n        button {\n          color: ${(props) => props.theme.colors.danger};\n        }\n      }\n\n      &:only-child {\n        a,\n        button {\n          border-top: 0;\n          padding: 0;\n        }\n      }\n    }\n  }\n\n  ${BottomModalContainerInner} {\n    color: ${(props) => props.theme.colors.textBlack};\n    background: #fff;\n    border-radius: 30px 30px 0 0;\n    padding: 30px;\n    text-align: center;\n  }\n\n  &.isMenu {\n    .main-container-menu {\n      padding-bottom: ${(props) => props.theme.device.paddingBottom};\n    }\n\n    ${BottomModalContainerInner} {\n      border-radius: 15px;\n      margin: 0 15px;\n      padding: 15px;\n\n      &:not(:first-child) {\n        margin-top: 10px;\n      }\n    }\n  }\n`;\n\nexport const BottomModalButton = styled.button<BottomModalButtonProps>`\n  width: 100%;\n  ${(props) =>\n    !props.variant || props.variant === 'regular'\n      ? css`\n          color: #000;\n          font-weight: bold;\n          text-decoration: none;\n        `\n      : css`\n          padding: 20px;\n          background: ${props.variant === 'primary'\n            ? props.theme.colors.background\n            : props.theme.colors[props.variant]};\n          color: ${(props) => props.theme.colors.textWhite};\n          border: 0;\n          border-radius: 5px;\n          margin: 30px 0 10px;\n          text-transform: uppercase;\n        `}\n\n  &:disabled {\n    opacity: 0.5;\n  }\n`;\n","import React from 'react';\nimport classNames from 'classnames';\nimport {\n  BottomModalButton,\n  BottomModalContainer,\n  BottomModalContainerInner,\n  BottomModalDisclaimer,\n  BottomModalTitleContainer,\n} from './bottom-modal.styled';\nimport { BottomModalProps } from './bottom-modal.interface';\nimport { useBottomModalState } from './bottom-modal.hook';\nimport { Link } from 'react-router-dom';\n\nexport const BottomModal: React.FC<BottomModalProps> = (props) => {\n  const { children, className } = props;\n  const { state } = useBottomModalState(props);\n\n  return (\n    <BottomModalContainer\n      show={state.show}\n      className={classNames(className, {\n        isMenu: !!props.menu,\n      })}\n    >\n      <div className=\"main-container-menu\">\n        {props.menu ? (\n          props.menu.map((row, i) => (\n            <BottomModalContainerInner key={i}>\n              {i === 0 && children && (\n                <div className=\"main-content-bottom-modal\">{children}</div>\n              )}\n\n              {row.map((menu, index) => (\n                <div\n                  key={index}\n                  className={classNames('menu-item', menu.className)}\n                >\n                  {menu.href ? (\n                    <a href={menu.href} onClick={menu.onClick}>\n                      {menu.label}\n                    </a>\n                  ) : menu.to ? (\n                    <Link to={menu.to}>{menu.label}</Link>\n                  ) : (\n                    <button onClick={menu.onClick}>{menu.label}</button>\n                  )}\n                </div>\n              ))}\n            </BottomModalContainerInner>\n          ))\n        ) : (\n          <BottomModalContainerInner>{children}</BottomModalContainerInner>\n        )}\n      </div>\n    </BottomModalContainer>\n  );\n};\n\nexport const Title = BottomModalTitleContainer;\nexport const Disclaimer = BottomModalDisclaimer;\nexport const Button = BottomModalButton;\n\nconst components = {\n  Title,\n  Disclaimer,\n  Button,\n};\n\nexport default Object.assign(BottomModal, components);\n","import { useStateStatus } from 'components/util/use-state-status';\nimport { useEffect } from 'react';\nimport { BottomModalProps } from './bottom-modal.interface';\nimport { bottomModalTransitionMilliseconds } from './bottom-modal.styled';\n\nexport const useBottomModalState = (props: BottomModalProps) => {\n  const [state, setState] = useStateStatus({\n    show: false,\n  });\n\n  const { show, onOpen, onClose } = props;\n\n  useEffect(() => {\n    if (state.show === show) return;\n    setState({ show });\n\n    setTimeout(() => {\n      if (show && onOpen) {\n        onOpen();\n      } else if (!show && onClose) {\n        onClose();\n      }\n    }, bottomModalTransitionMilliseconds);\n  }, [show, setState, state.show, onClose, onOpen]);\n\n  return { state };\n};\n","import { Status } from 'components/util/status';\nimport { useStateStatus } from 'components/util/use-state-status';\nimport React, { useEffect } from 'react';\nimport BottomModal from '../bottom-modal';\nimport { ConfirmModalState } from './confirm-modal.interface';\n\nexport const initialState: ConfirmModalState = {\n  status: Status.loaded,\n  title: 'Are you sure?',\n  description: 'This action cannot be undone',\n  confirmText: 'CONFIRM',\n  cancelText: 'CANCEL',\n  confirmVariant: 'danger',\n  cancelVariant: 'regular',\n  show: false,\n  closed: true,\n  onCancel: () => {\n    // not implemented\n  },\n  onConfirm: () => {\n    // not implemented\n  },\n};\n\nexport let onConfirm = (args: Partial<ConfirmModalState>) => {\n  // Not implemented\n};\n\nexport const ConfirmModal = () => {\n  const [state, setState] = useStateStatus<ConfirmModalState>(initialState);\n\n  useEffect(() => {\n    onConfirm = (args: Partial<ConfirmModalState>) => {\n      setState({\n        ...args,\n        show: true,\n        closed: false,\n      });\n    };\n  }, [setState]);\n\n  const onClose = () => {\n    setState(initialState);\n  };\n\n  const onCancel = (ev: React.MouseEvent<HTMLButtonElement>) => {\n    state.onCancel(ev);\n    if (ev.isDefaultPrevented() || ev.isPropagationStopped()) return;\n    setState({ show: false });\n  };\n\n  const onConfirmButton = (ev: React.MouseEvent<HTMLButtonElement>) => {\n    state.onConfirm(ev);\n    if (ev.isDefaultPrevented() || ev.isPropagationStopped()) return;\n    setState({ show: false });\n  };\n\n  if (state.closed) return null;\n\n  return (\n    <BottomModal show={state.show} onClose={onClose}>\n      <BottomModal.Title>{state.title}</BottomModal.Title>\n      <BottomModal.Disclaimer>{state.description}</BottomModal.Disclaimer>\n      <BottomModal.Button\n        variant={state.confirmVariant}\n        onClick={onConfirmButton}\n      >\n        {state.confirmText}\n      </BottomModal.Button>\n      <BottomModal.Button variant={state.cancelVariant} onClick={onCancel}>\n        {state.cancelText}\n      </BottomModal.Button>\n    </BottomModal>\n  );\n};\n","import {\n  createSlice,\n  createEntityAdapter,\n  PayloadAction,\n  EntityId,\n} from '@reduxjs/toolkit';\nimport { AccountInterface } from './accounts.interface';\n\nconst accountsAdapter = createEntityAdapter<AccountInterface>({\n  selectId: (account) => account.spreadsheetId,\n});\n\nconst accountSlice = createSlice({\n  name: 'account',\n  initialState: accountsAdapter.getInitialState(),\n  reducers: {\n    /**\n     * Import is the process of adding the accounts not initialised yet\n     */\n    importAccounts: (state, action: PayloadAction<string[]>) => {\n      const accounts = action.payload.map((spreadsheetId) => ({\n        title: '',\n        spreadsheetId,\n        initialised: false,\n        loading: false,\n        error: false,\n      }));\n\n      accountsAdapter.upsertMany(state, accounts);\n    },\n    /**\n     * Set account as loading\n     */\n    startLoadingAccount: (\n      state,\n      { payload: spreadsheetId }: PayloadAction<EntityId>\n    ) => {\n      const entity = state.entities[spreadsheetId];\n      if (entity) {\n        entity.loading = true;\n        entity.error = false;\n      }\n    },\n    loadAccounts: (state, { payload }: PayloadAction<AccountInterface[]>) => {\n      accountsAdapter.upsertMany(state, payload);\n    },\n    removeAccount: (state, { payload }: PayloadAction<EntityId>) => {\n      accountsAdapter.removeOne(state, payload);\n    },\n  },\n});\n\nexport const {\n  importAccounts,\n  startLoadingAccount,\n  loadAccounts,\n  removeAccount,\n} = accountSlice.actions;\n\nexport default accountSlice.reducer;\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit';\nimport { Status } from 'components/util/status';\nimport { AuthInterface } from './auth.interface';\n\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState: {\n    status: Status.initializing,\n    authenticated: false,\n    signedin: false,\n  },\n  reducers: {\n    setAuth: (state, { payload }: PayloadAction<Partial<AuthInterface>>) => {\n      if (Object.prototype.hasOwnProperty.call(payload, 'status')) {\n        state.status = payload.status as Status;\n      }\n\n      if (Object.prototype.hasOwnProperty.call(payload, 'authenticated')) {\n        state.authenticated = payload.authenticated as boolean;\n      }\n\n      if (Object.prototype.hasOwnProperty.call(payload, 'signedin')) {\n        state.signedin = payload.signedin as boolean;\n      }\n    },\n  },\n});\n\nexport const { setAuth } = authSlice.actions;\nexport default authSlice.reducer;\n","import { configureStore } from '@reduxjs/toolkit';\nimport accountSlice from '../slices/accounts';\nimport authSlice from '../slices/auth';\n\nexport const store = configureStore({\n  reducer: {\n    accounts: accountSlice,\n    auth: authSlice,\n  },\n});\n\nexport type RootState = ReturnType<typeof store.getState>;\n","import styled from 'styled-components/macro';\nimport { Button } from 'react-bootstrap';\n\nexport const LoginContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n`;\n\nexport const LoginButtton = styled(Button)`\n  padding: 0;\n  border: 0;\n  padding-right: 15px;\n  & > svg {\n    width: 40px;\n  }\n`;\n","export interface GlobalSettingsInterface {\n  /** API KEY from google console https://console.developers.google.com */\n  apikey: string;\n  /** Client ID from OAUTH from google console https://console.developers.google.com */\n  client_id: string;\n  /** spreadsheet ID from the used spreadsheet */\n  spid: string;\n  /** list of spreadsheet IDs */\n  accounts: string[];\n}\n\nexport enum GlobalEnum {\n  name = 'wvbucketSettings',\n}\n","import {\n  GlobalEnum,\n  GlobalSettingsInterface,\n} from './global-settings.interface';\n\n/**\n * Get global settings from local storage\n */\nexport const getGlobalSettings = (): GlobalSettingsInterface => {\n  const defaultSettings: GlobalSettingsInterface = {\n    apikey: '',\n    client_id: process.env.REACT_APP_GOOGLE_CLIENT_ID || '',\n    spid: '',\n    accounts: [],\n  };\n\n  const strGlobalSettings = localStorage.getItem(GlobalEnum.name);\n  if (!strGlobalSettings) return defaultSettings;\n  const globalSettings: GlobalSettingsInterface = JSON.parse(strGlobalSettings);\n  if (!globalSettings) return defaultSettings;\n  return globalSettings;\n};\n\n/**\n * Save changes on global settings in local storage\n */\nexport const saveGlobalSettings = (globalSettings: GlobalSettingsInterface) => {\n  localStorage.setItem(GlobalEnum.name, JSON.stringify(globalSettings));\n};\n\n/**\n * Remove local storage\n */\nexport const deleteGlobalSettings = () => {\n  localStorage.removeItem(GlobalEnum.name);\n};\n\nexport const setGlobalSettings = (state: Partial<GlobalSettingsInterface>) => {\n  const globalSettings = {\n    ...getGlobalSettings(),\n    ...state,\n  };\n\n  saveGlobalSettings(globalSettings);\n};\n","import { SchemaBuilder } from './schemas.interface';\n\nimport {\n  WVBucketInterface,\n  WVBucketSchema,\n} from './wvbuckets/wvbuckets.interface';\n\nexport type SchemaTypes = WVBucketInterface;\nexport enum EnumSchemas {\n  WVBUCKET = 'WVBUCKET',\n}\n\nexport interface SchemaInterface {\n  name: EnumSchemas;\n  schema: SchemaBuilder<SchemaTypes>;\n}\n\n/**\n * Build Application database\n */\nexport type DatabaseInterface = {\n  [key in EnumSchemas]: {\n    id: string | number;\n    rows: SchemaTypes[];\n  };\n};\n\n/**\n * All schemas to build application\n */\nexport const Schemas: SchemaInterface[] = [\n  {\n    name: EnumSchemas.WVBUCKET,\n    schema: WVBucketSchema,\n  },\n];\n\nexport type SheetProperties = gapi.client.sheets.SheetProperties;\n","/**\n * Transform a interger number into letter\n */\nexport const numberToLetter = (num: number) => {\n  let s = '';\n\n  while (num > 0) {\n    const t = (num - 1) % 26;\n    s = `${String.fromCharCode(65 + t)}${s}`;\n    num = ((num - t) / 26) | 0;\n  }\n  return s;\n};\n","import { getGlobalSettings } from 'components/global-settings';\nimport { numberToLetter } from 'components/util/number-to-letter';\n\nexport const treatGoogleAPIError = (error: any): string => {\n  console.error(error);\n  if (typeof error === 'string') return error;\n  if (error?.message) {\n    return error.message;\n  } else if (error?.details) {\n    return error.details;\n  } else if (error?.result?.error?.message) {\n    return error?.result?.error?.message;\n  } else {\n    return 'Something went wrong trying to authenticated. Check your log';\n  }\n};\n\n/**\n * Authenticate application using client id from local storage\n */\nexport const authenticate = async () => {\n  const globalSettings = getGlobalSettings();\n  if (!globalSettings.client_id || !gapi)\n    throw new Error('Missing client ID or GAPI');\n\n  return new Promise(async (resolve, reject) => {\n    const init = async () => {\n      try {\n        await gapi.client.init({\n          discoveryDocs: [\n            'https://sheets.googleapis.com/$discovery/rest?version=v4',\n          ],\n          clientId: globalSettings.client_id,\n          scope: 'https://www.googleapis.com/auth/spreadsheets',\n        });\n      } catch (error: any) {\n        return reject(treatGoogleAPIError(error));\n      }\n\n      resolve(true);\n    };\n\n    gapi.load('client:auth2', init);\n  });\n};\n\n/**\n * Subscribe user to receive user sign status\n */\nlet _subscriptions: ((signedin: boolean) => void)[] = [];\nlet _subscriptionInitialised = false;\nexport const subscribeUserSignedStatus = (\n  callback: (signedin: boolean) => void\n) => {\n  _subscriptions.push(callback);\n\n  if (!_subscriptionInitialised) {\n    const subscriptionCaller = (signedin: boolean) => {\n      _subscriptions.forEach((callback) => callback(signedin));\n    };\n\n    const instance = gapi.auth2.getAuthInstance();\n    instance.isSignedIn.listen(subscriptionCaller);\n  }\n\n  return () => {\n    _subscriptions = _subscriptions.filter((_cb) => _cb !== callback);\n  };\n};\n\n/**\n * Verify if user is signed in\n */\nexport const isSignedIn = () => {\n  const instance = gapi.auth2.getAuthInstance();\n  return instance.isSignedIn.get();\n};\n\n/**\n * Start signin process\n */\nexport const onSignIn = () => {\n  return gapi.auth2.getAuthInstance().signIn();\n};\n\n/**\n * Start signout process\n */\nexport const onSignOut = () => {\n  return gapi.auth2.getAuthInstance().signOut();\n};\n\n/**\n * Get details of a spreadsheet\n */\nexport const getSpreadsheetDetails = async (\n  spreadsheetId: string\n): Promise<gapi.client.Request<gapi.client.sheets.Spreadsheet>> => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      const details = await gapi.client.sheets.spreadsheets.get({\n        spreadsheetId,\n        fields:\n          'sheets.properties.title,sheets.properties.sheetId,properties.title',\n      });\n\n      return resolve(details);\n    } catch (error: any) {\n      return reject(treatGoogleAPIError(error));\n    }\n  });\n};\n\n/**\n * Create sheet inside spreadsheet\n */\nexport const createSheet = async (\n  spreadsheetId: string,\n  title: string,\n  columns: string[]\n) => {\n  try {\n    const result = await gapi.client.sheets.spreadsheets.batchUpdate({\n      spreadsheetId,\n      resource: {\n        requests: [\n          {\n            addSheet: {\n              properties: {\n                title,\n              },\n            },\n          },\n        ],\n      },\n    });\n\n    await addSheetRows(spreadsheetId, title, [columns]);\n\n    const properties = result.result.replies?.[0].addSheet?.properties;\n\n    if (!properties) throw new Error('Invalid response from the api.');\n\n    return {\n      title: properties.title,\n      sheetId: properties.sheetId,\n    };\n  } catch (e) {\n    throw treatGoogleAPIError(e);\n  }\n};\n\n/**\n * Add rows to spreadsheet\n */\nexport const addSheetRows = async (\n  spreadsheetId: string,\n  title: string,\n  rows: string[][]\n) => {\n  try {\n    const result = await gapi.client.sheets.spreadsheets.values.append({\n      spreadsheetId,\n      range: `${title}!A1`,\n      valueInputOption: 'USER_ENTERED',\n      resource: {\n        values: rows,\n      },\n    });\n    return result;\n  } catch (e) {\n    throw treatGoogleAPIError(e);\n  }\n};\n\n/**\n * Select content of specific sheet\n */\nexport const getSheetRows = async (\n  spreadsheetId: string,\n  title: string,\n  paramArgs?: { from?: number; to?: number; columns?: number }\n) => {\n  const args = {\n    from: 2,\n    columns: 3,\n    ...(paramArgs || {}),\n  };\n\n  const noLimit = !args.to;\n  if (args.from < 2) args.from = 2;\n  const limit = args.from - 2 + 1000;\n\n  const lastColumn = numberToLetter(args.columns || 1);\n\n  const result = await gapi.client.sheets.spreadsheets.values.get({\n    spreadsheetId,\n    range: `${title}!A${args.from}:${lastColumn}${noLimit ? limit : args.to}`,\n  });\n\n  let values = (result.result.values || []) as string[][];\n\n  if (noLimit) {\n    const diff = limit - args.from;\n    if (values.length >= diff) {\n      values = [\n        ...values,\n        ...(await getSheetRows(spreadsheetId, title, {\n          ...args,\n          from: limit + 1,\n        })),\n      ];\n    }\n  }\n\n  return values;\n};\n\nexport const createSpreadsheet = async (title: string) => {\n  const response = await gapi.client.sheets.spreadsheets.create({\n    resource: {\n      properties: {\n        title,\n      },\n    },\n  });\n\n  return response;\n};\n","import React from 'react';\nimport { LoginButtton, LoginContainer } from './login.styled';\nimport { ReactComponent as GoogleLogin } from 'components/images/btn_google_light_normal_ios.svg';\nimport { useLoginState } from './login.hook';\n\nexport const Login: React.FC = () => {\n  const { state, onLogin } = useLoginState();\n\n  return (\n    <LoginContainer>\n      <LoginButtton disabled={state.disabled} onClick={onLogin}>\n        <GoogleLogin /> Login with Google\n      </LoginButtton>\n    </LoginContainer>\n  );\n};\n","import { setAlert } from 'components/alert';\nimport { onSignIn } from 'components/sheet-api';\nimport { Status } from 'components/util/status';\nimport { useStateStatus } from 'components/util/use-state-status';\n\nexport const useLoginState = () => {\n  const [state, setState] = useStateStatus({\n    status: Status.loaded,\n  });\n\n  const onLogin = async () => {\n    setState({ status: Status.loading });\n\n    try {\n      await onSignIn();\n    } catch (error) {\n      console.error(error);\n      setAlert('Something went wrong trying to log you in', 'danger');\n    }\n\n    setState({ status: Status.loaded });\n  };\n\n  return {\n    state,\n    onLogin,\n  };\n};\n","import { deleteGlobalSettings } from 'components/global-settings';\nimport { onSignOut } from 'components/sheet-api';\nimport { Status } from 'components/util/status';\nimport { useStateStatus } from 'components/util/use-state-status';\nimport { useEffect } from 'react';\nimport { onConfirm } from '../confirm-modal/confirm-modal';\n\nexport const useLayoutState = () => {\n  const [state, setState] = useStateStatus({\n    status: Status.loaded,\n    sideMenu: false,\n    width: window.innerWidth,\n  });\n\n  useEffect(() => {\n    let mounted = true;\n    const onResize = () => {\n      if (!mounted) return;\n      setState({\n        width: window.innerWidth,\n      });\n    };\n\n    window.addEventListener('resize', onResize);\n\n    return () => {\n      mounted = false;\n      window.removeEventListener('resize', onResize);\n    };\n  }, [setState]);\n\n  const toggleSideMenu = (sideMenu?: boolean) => {\n    return () => {\n      setState({\n        sideMenu: sideMenu !== undefined ? sideMenu : !state.sideMenu,\n      });\n    };\n  };\n\n  const onSignout = () => {\n    onSignOut();\n  };\n\n  const confirmDeleteSettings = () => {\n    onConfirm({\n      description:\n        'All data of the application will be deleted, but the spreadsheets will be kept under your google account',\n      onConfirm: () => {\n        deleteGlobalSettings();\n        window.location.reload();\n      },\n    });\n  };\n\n  return {\n    state,\n    toggleSideMenu,\n    onSignout,\n    confirmDeleteSettings,\n  };\n};\n","import styled from 'styled-components/macro';\n\nexport const LayoutContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  background: ${(props) => props.theme.colors.background};\n  color: ${(props) => props.theme.colors.textWhite};\n\n  & > .layout-header {\n    position: fixed;\n    width: 100%;\n    height: 50px;\n    display: flex;\n    align-items: center;\n    justify-content: flex-end;\n    padding-right: 10px;\n\n    & > .menu-button {\n      color: ${(props) => props.theme.colors.textWhite};\n      font-size: 1.3em;\n    }\n  }\n\n  & > .slide-right-menu {\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    right: 0;\n    background-color: var(--bs-gray-dark);\n    padding: ${(props) => props.theme.device.padding};\n    width: 100%;\n    transition: right 0.5s;\n\n    & > .slide-header {\n      height: 50px;\n      display: flex;\n      align-items: center;\n      padding: 0 10px;\n\n      & > .right-side {\n        & > .button-close-slide {\n          color: ${(props) => props.theme.colors.textWhite};\n          font-size: 1.3em;\n        }\n      }\n\n      & > .center-side {\n        flex-grow: 1;\n        text-align: center;\n      }\n    }\n\n    & > .slide-content {\n      & > ul {\n        list-style: none;\n        padding: 0;\n\n        & > li {\n          padding: 10px 5px;\n\n          .info-versioning {\n            padding-left: 10px;\n            font-style: italic;\n            opacity: 0.7;\n          }\n        }\n      }\n    }\n  }\n`;\n","import { faBars, faCaretLeft } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as React from 'react';\nimport { useLayoutState } from './layout.hook';\nimport { LayoutContainer } from './layout.styled';\n\nexport const Layout: React.FC = (props) => {\n  const { children } = props;\n  const { state, toggleSideMenu, onSignout, confirmDeleteSettings } =\n    useLayoutState();\n\n  return (\n    <LayoutContainer>\n      <div className=\"layout-header\">\n        <button\n          className=\"menu-button\"\n          onClick={toggleSideMenu(true)}\n          disabled={state.disabled}\n        >\n          <FontAwesomeIcon icon={faBars} />\n        </button>\n      </div>\n      {children}\n      <div\n        className=\"slide-right-menu\"\n        style={{ right: !state.sideMenu ? `-${state.width}px` : undefined }}\n      >\n        <div className=\"slide-header\">\n          <div className=\"right-side\">\n            <button\n              className=\"button-close-slide\"\n              disabled={state.disabled}\n              onClick={toggleSideMenu(false)}\n            >\n              <FontAwesomeIcon icon={faCaretLeft} />\n            </button>\n          </div>\n          <div className=\"center-side\">WVBuckets</div>\n        </div>\n        <div className=\"slide-content\">\n          <hr />\n          <ul>\n            <li>\n              <button\n                className=\"logout-button text-primary\"\n                disabled={state.disabled}\n                onClick={onSignout}\n              >\n                <i className=\"fas fa-sign-out-alt\" /> Logout\n              </button>\n            </li>\n            <li>\n              <button\n                className=\"delete-settings-button text-danger\"\n                disabled={state.disabled}\n                onClick={confirmDeleteSettings}\n              >\n                Delete Settings\n              </button>\n            </li>\n            <li>\n              <span className=\"info-versioning\">\n                version: {process.env.REACT_APP_VERSION}\n              </span>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </LayoutContainer>\n  );\n};\n","import { RootState } from 'components/redux/store';\n\nexport const selectAuth = (state: RootState) => state.auth;\n","import React from 'react';\nimport { RouteProps, Route } from 'react-router-dom';\nimport { AuthRouteProps } from './auth-route.interface';\nimport { Layout } from 'components/ui-components/layout';\nimport { useSelector } from 'react-redux';\nimport { selectAuth } from 'components/redux/selectors/auth';\n\nexport const AuthRoute: React.FC<RouteProps> = ({ component, ...rest }) => {\n  return (\n    <Route\n      {...rest}\n      render={(props) => <AuthComponent {...props} component={component} />}\n    />\n  );\n};\n\nconst AuthComponent: React.FC<AuthRouteProps> = ({\n  component: Component,\n  ...rest\n}) => {\n  const { signedin } = useSelector(selectAuth);\n\n  if (!Component || !signedin) return null;\n\n  return (\n    <Layout>\n      <Component {...rest} />\n    </Layout>\n  );\n};\n","import React from 'react';\nimport { BottomModal } from '../bottom-modal';\nimport { useBottomMenuState } from './bottom-menu.hook';\nimport { BottomMenuProps } from './bottom-menu.interface';\n\nexport const BottomMenu: React.FC<BottomMenuProps> = (props) => {\n  const { show, closed, onClose } = useBottomMenuState(props);\n\n  if (closed) return null;\n\n  return (\n    <BottomModal show={show} onClose={onClose} menu={props.menu}>\n      {props.children}\n    </BottomModal>\n  );\n};\n","import { useLayoutEffect, useState } from 'react';\nimport { BottomMenuProps } from './bottom-menu.interface';\n\nexport const useBottomMenuState = (props: BottomMenuProps) => {\n  const [closed, setClosed] = useState(true);\n  const [show, setShow] = useState(false);\n  useLayoutEffect(() => {\n    if (!show && props.show && closed) {\n      setClosed(false);\n    } else if (!show && props.show) {\n      setShow(true);\n    } else if (show && !props.show && !closed) {\n      setShow(false);\n    }\n  }, [props.show, show, closed]);\n\n  const onClose = () => {\n    setClosed(true);\n  };\n\n  return { closed, show, onClose };\n};\n","import { RootState } from 'components/redux/store';\n\nexport const selectAccounts = (state: RootState) => state.accounts;\n","import { Status } from 'components/util/status';\n\nexport interface ModalAddAccountProps {\n  type?: 'create-account' | 'import-account';\n}\n\nexport interface ModalAddAccountStateInterface {\n  status: Status;\n  title: string;\n  url: string;\n  show: boolean;\n  error: {\n    url?: string;\n    title?: string;\n  };\n}\n\nexport enum ModalAddAccountErrors {\n  missingUrl = 'Please add a google sheets url',\n  missingTitle = 'A title is required to create a new google sheet',\n  invalidUrl = 'The URL is invalid. Please check if you have access to this google sheets',\n  accountExists = 'Account already exists in the app',\n}\n","import { SchemaBuilder } from '../schemas.interface';\n\nexport interface WVBucketInterface {\n  date: string;\n  amount: number;\n  category: string;\n  message: string;\n}\n\nexport const WVBucketSchema: SchemaBuilder<WVBucketInterface> = {\n  date: { label: 'Date' },\n  amount: { label: 'Amount', type: 'number' },\n  category: { label: 'Category' },\n  message: { label: 'Message' },\n};\n","import { AccountInterface } from 'components/redux/slices/accounts/accounts.interface';\nimport {\n  createSheet,\n  getSheetRows,\n  getSpreadsheetDetails,\n  treatGoogleAPIError,\n} from 'components/sheet-api';\nimport { SheetProperties } from '.';\nimport { Schemas } from './database.interface';\nimport { DatabaseInterface, SchemaTypes } from './database.interface';\n\nexport const initialiseDatabase = async (\n  spreadsheetIds: string[]\n): Promise<AccountInterface[]> => {\n  const accounts: AccountInterface[] = [];\n  for (const spreadsheetId of spreadsheetIds) {\n    try {\n      const details = await getSpreadsheetDetails(spreadsheetId);\n\n      // Find sheets inside spreadsheet\n      const sheets = (details.result.sheets || []).reduce(\n        (acc: { [key: string]: SheetProperties }, curr) => {\n          if (!curr.properties) return acc;\n          const title = curr.properties?.title || 'Untitled';\n          return {\n            ...acc,\n            [title]: curr.properties,\n          };\n        },\n        {}\n      );\n\n      const schemas: Partial<DatabaseInterface> = {};\n\n      // Verify if all sheets are in the account\n      for (const Schema of Schemas) {\n        if (!sheets[Schema.name]) {\n          // Create schema in the spreadsheet\n          const result = await createSheet(\n            spreadsheetId,\n            Schema.name,\n            Object.entries(Schema.schema).map(([_, entry]) => entry.label)\n          );\n\n          schemas[Schema.name] = {\n            id: result.sheetId || 0,\n            rows: [],\n          };\n        } else {\n          schemas[Schema.name] = {\n            id: sheets[Schema.name].sheetId || 0,\n            rows: [],\n          };\n        }\n\n        const rows = await getSheetRows(spreadsheetId, Schema.name, {\n          columns: Object.entries(Schema.schema).length,\n        });\n\n        (schemas as DatabaseInterface)[Schema.name].rows = rows.map(\n          (row, index) => {\n            const values: [string, string, string | undefined][] =\n              Object.entries(Schema.schema).map(([key, entry], index) => [\n                key,\n                row[index],\n                entry.type,\n              ]);\n\n            return values.reduce((acc, curr) => {\n              let v: string | number = curr[1];\n\n              if (curr[2] === 'number') {\n                const num = +v.replace(/[$,]/g, '');\n                if (!isNaN(num)) v = num;\n              }\n\n              return {\n                ...acc,\n                [curr[0]]: v,\n              };\n            }, {}) as SchemaTypes;\n          }\n        );\n      }\n\n      accounts.push({\n        title: details.result.properties?.title || 'Untitled',\n        spreadsheetId,\n        schemas: schemas as DatabaseInterface,\n        initialised: true,\n        loading: false,\n        error: false,\n      });\n    } catch (error: any) {\n      accounts.push({\n        title: 'Untitled',\n        spreadsheetId,\n        schemas: undefined,\n        error: treatGoogleAPIError(error),\n        initialised: true,\n        loading: false,\n      });\n    }\n  }\n\n  return accounts;\n};\n","import { EntityId } from '@reduxjs/toolkit';\nimport { AccountInterface } from 'components/redux/slices/accounts/accounts.interface';\nimport { RootState } from 'components/redux/store';\nimport { EnumSchemas } from 'components/schemas';\n\nexport const getAccount = (\n  accounts: RootState['accounts'],\n  spreadsheetId: EntityId\n) => {\n  return accounts.entities[spreadsheetId] || undefined;\n};\n\nexport const getAccountRows = (account: AccountInterface | undefined) => {\n  if (!account) return [];\n\n  return (\n    account.schemas?.[EnumSchemas.WVBUCKET].rows.map((row, id) => ({\n      id,\n      ...row,\n    })) || []\n  );\n};\n\nexport const getAccountBuckets = (rows: ReturnType<typeof getAccountRows>) => {\n  return rows.reduce(\n    (acc: { ids: string[]; buckets: { [key: string]: typeof rows } }, curr) => {\n      if (!acc.ids.includes(curr.category)) {\n        return {\n          ids: [...acc.ids, curr.category].sort(),\n          buckets: {\n            ...acc.buckets,\n            [curr.category]: [curr],\n          },\n        };\n      }\n\n      return {\n        ...acc,\n        buckets: {\n          ...acc.buckets,\n          [curr.category]: [...acc.buckets[curr.category], curr],\n        },\n      };\n    },\n    {\n      ids: [],\n      buckets: {},\n    }\n  );\n};\n\nexport const getAccountBalance = (rows: ReturnType<typeof getAccountRows>) => {\n  return (\n    rows.reduce((acc, curr) => {\n      return acc + curr.amount * 100;\n    }, 0) / 100\n  );\n};\n\nexport const getAccountDetails = (\n  accounts: RootState['accounts'],\n  spreadsheetId: EntityId\n) => {\n  const account = getAccount(accounts, spreadsheetId);\n  const rows = getAccountRows(account);\n  const balance = getAccountBalance(rows);\n  const buckets = getAccountBuckets(rows);\n\n  return {\n    account,\n    rows,\n    balance,\n    buckets,\n  };\n};\n","import { EntityId } from '@reduxjs/toolkit';\nimport { useMemo } from 'react';\nimport { useSelector } from 'react-redux';\nimport { selectAccounts } from '.';\nimport { getAccountDetails } from './accounts.helpers';\n\nexport const useAccountDetails = (spreadsheetId: EntityId) => {\n  const accounts = useSelector(selectAccounts);\n\n  const result = useMemo(() => {\n    return getAccountDetails(accounts, spreadsheetId);\n  }, [accounts, spreadsheetId]);\n\n  return result;\n};\n","import styled from 'styled-components/macro';\n\nexport const AccountContainer = styled.div`\n  background: #fff;\n  color: #000;\n  display: flex;\n  padding: 15px;\n  margin: 10px 0;\n  border-radius: 4px;\n  position: relative;\n\n  .loading-account {\n    color: #ccc;\n    width: 100%;\n\n    p {\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n    }\n  }\n\n  .icon-area {\n    width: 30px;\n\n    .icon {\n      display: block;\n    }\n  }\n\n  .account-details {\n    color: #aaa;\n    flex-grow: 1;\n    width: calc(100% - 30px);\n\n    h4 {\n      color: #000;\n      font-size: 1rem;\n      font-weight: bold;\n      margin-bottom: 0;\n      flex-grow: 1;\n    }\n\n    .account-id {\n      display: block;\n      width: 100%;\n      overflow: hidden;\n      white-space: nowrap;\n      text-overflow: ellipsis;\n      font-size: 0.8rem;\n    }\n\n    .account-summary {\n      margin-top: 10px;\n      font-size: 0.9rem;\n      .account-summary-line {\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n\n        .total-summary {\n          color: #000;\n          font-weight: bold;\n        }\n      }\n    }\n  }\n\n  .button-more {\n    position: absolute;\n    right: 5px;\n    top: 0px;\n    font-size: 1rem;\n  }\n`;\n","import { faCreditCard } from '@fortawesome/free-regular-svg-icons';\nimport { faEllipsisH } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport * as React from 'react';\nimport { AccountState } from './account.hook';\nimport { AccountProps } from './account.interface';\nimport { AccountContainer } from './account.styled';\n\nexport const Account: React.FC<AccountProps> = (props) => {\n  const { account, balance, buckets, onShowMenu } = AccountState(props);\n\n  if (account.loading) {\n    return (\n      <AccountContainer>\n        <div className=\"loading-account\">\n          <div>\n            <i className=\"fas fa-fan fa-spin splash-screen-spinner\" />\n          </div>\n          <p>Loading Account</p>\n          <p>{account.spreadsheetId}</p>\n        </div>\n      </AccountContainer>\n    );\n  }\n\n  if (account.error) {\n    <AccountContainer>\n      <span className=\"text-danger\">{account.error}</span>\n    </AccountContainer>;\n  }\n\n  if (!account.initialised) return null;\n\n  return (\n    <>\n      <AccountContainer>\n        <div className=\"icon-area\">\n          <FontAwesomeIcon icon={faCreditCard} className=\"icon\" />\n        </div>\n        <div className=\"account-details\">\n          <h4>{account.title}</h4>\n          <span className=\"account-id\">{account.spreadsheetId}</span>\n          <div className=\"account-summary\">\n            <div className=\"account-summary-line\">\n              <div className=\"label-summary\">Balance</div>\n              <div\n                className={classNames('total-summary', {\n                  'text-danger': balance < 0,\n                })}\n              >\n                ${balance.toLocaleString()}\n              </div>\n            </div>\n            <div className=\"account-summary-line\">\n              <div className=\"label-summary\">Buckets</div>\n              <div className=\"total-summary\">{buckets.ids.length}</div>\n            </div>\n          </div>\n        </div>\n        <button\n          className=\"button-more\"\n          onClick={onShowMenu(account.spreadsheetId)}\n        >\n          <FontAwesomeIcon icon={faEllipsisH} />\n        </button>\n      </AccountContainer>\n    </>\n  );\n};\n","import { useAccountDetails } from 'components/redux/selectors/accounts/accounts.hooks';\nimport {\n  loadAccounts,\n  startLoadingAccount,\n} from 'components/redux/slices/accounts';\nimport { initialiseDatabase } from 'components/schemas';\nimport { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { AccountProps } from './account.interface';\n\nexport const AccountState = (props: AccountProps) => {\n  const { account, onShowMenu } = props;\n  const dispatch = useDispatch();\n\n  const { balance, buckets } = useAccountDetails(account.spreadsheetId);\n\n  useEffect(() => {\n    if (account.initialised) return;\n    let mounted = true;\n    const main = async () => {\n      dispatch(startLoadingAccount(account.spreadsheetId));\n      const details = await initialiseDatabase([account.spreadsheetId]);\n\n      if (!mounted) return;\n\n      dispatch(loadAccounts(details));\n    };\n\n    main();\n\n    return () => {\n      mounted = false;\n    };\n  }, [account.spreadsheetId, account.initialised, dispatch]);\n\n  return { account, balance, buckets, onShowMenu };\n};\n","import { selectAccounts } from 'components/redux/selectors/accounts';\nimport { useAccountDetails } from 'components/redux/selectors/accounts/accounts.hooks';\nimport { format } from 'date-fns';\nimport React, { useEffect, useMemo } from 'react';\nimport useCreateState from 'react-hook-setstate';\nimport { useSelector } from 'react-redux';\nimport { TogglerOption } from '../toggler/toggler.interface';\nimport { RowModalContextStateInterface } from './context/row-modal-context.interface';\nimport { RowControllerArgs } from './row-modal.interface';\n\nexport const rowController = {\n  open: (args: RowControllerArgs) => {\n    // Not Implemented\n  },\n};\n\nexport const useRowModal = () => {\n  const [state, setState] = useCreateState<RowModalContextStateInterface>({\n    open: false,\n    type: 'expense',\n    amount: '0',\n    message: '',\n    view: 'main',\n    date: format(new Date(), 'yyyy-MM-dd'),\n    account_id: '',\n    category: '',\n  });\n\n  const accounts = useSelector(selectAccounts);\n\n  const accountDetails = useAccountDetails(state.account_id);\n\n  const selectedAccount = accountDetails.account || undefined;\n\n  // const selectedAccount = useMemo(() => {\n  //   if (!state.account_id) return undefined;\n\n  //   const found = accounts.ids.find((id) => id === state.account_id);\n\n  //   if (!found) return undefined;\n\n  //   return accounts.entities[found];\n  // }, [accounts, state.account_id]);\n\n  const typeOptions = [\n    { label: 'Income', value: 'income' },\n    { label: 'Expense', value: 'expense' },\n  ];\n\n  const formatedNumber = useMemo(() => {\n    const amount = +state.amount;\n\n    if (isNaN(amount)) return { decimal: '0', integer: '00' };\n\n    const stramount = `${amount}`;\n    const decimal = stramount.substr(-2).padEnd(2, '0');\n    const integer =\n      stramount.length > 2\n        ? (+stramount.substr(0, stramount.length - 2)).toLocaleString()\n        : '0';\n\n    return {\n      decimal,\n      integer,\n    };\n  }, [state.amount]);\n\n  const { decimal, integer } = formatedNumber;\n\n  const onSelectType = ({ value: type }: TogglerOption) => {\n    setState({ type: type as string });\n  };\n\n  const onKeyPressAmount = (ev: React.KeyboardEvent<HTMLInputElement>) => {\n    if (ev.key === 'Backspace') {\n      let amount = state.amount.substr(0, state.amount.length - 1);\n      if (!amount) amount = '0';\n      return setState({ amount });\n    }\n\n    if (!ev.key.match(/[0-9]/)) return;\n\n    if (state.amount.length > 9) return;\n\n    let amount = `${state.amount}${ev.key}`;\n\n    setState({ amount });\n  };\n\n  const onSetDescription = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setState({ message: ev.target.value });\n  };\n\n  useEffect(() => {\n    rowController.open = (args: RowControllerArgs) => {\n      setState({\n        account_id: args.account_id,\n        open: true,\n        type: args.type || 'income',\n        message: args.description || '',\n        date: args.date || format(new Date(), 'yyyy-MM-dd'),\n        category: args.category,\n      });\n    };\n  }, [setState]);\n\n  return {\n    state,\n    typeOptions,\n    decimal,\n    integer,\n    accounts,\n    selectedAccount,\n    onSelectType,\n    onKeyPressAmount,\n    onSetDescription,\n    setState,\n  };\n};\n","import {\n  getGlobalSettings,\n  setGlobalSettings,\n} from 'components/global-settings';\n\n/**\n * Add account to global settings\n */\nexport const onAddAccount = (spreadsheetId: string) => {\n  const settings = getGlobalSettings();\n  const accounts = [...settings.accounts, spreadsheetId];\n  setGlobalSettings({ accounts });\n};\n\n/**\n * Add account to global settings\n */\nexport const onDeleteAccount = (spreadsheetId: string) => {\n  // Remove from the storage\n  const settings = getGlobalSettings();\n  const accounts = settings.accounts.filter((id) => id !== spreadsheetId);\n  setGlobalSettings({ accounts });\n};\n\n/**\n * Verify if account already exists\n */\nexport const accountExists = (spreadsheetId: string) => {\n  const settings = getGlobalSettings();\n  return settings.accounts.find((account) => account === spreadsheetId);\n};\n","import { EntityId } from '@reduxjs/toolkit';\nimport { selectAccounts } from 'components/redux/selectors/accounts';\nimport { getAccountDetails } from 'components/redux/selectors/accounts/accounts.helpers';\nimport { removeAccount } from 'components/redux/slices/accounts';\nimport { onConfirm } from 'components/ui-components/confirm-modal/confirm-modal';\nimport { rowController } from 'components/ui-components/row-modal/row-modal.hook';\nimport { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { onDeleteAccount } from './accounts.service';\nimport { ModalAddAccountProps } from './modal-add-account/modal-add-account.interface';\n\nexport const useAccountsState = () => {\n  const { typeCreation } =\n    useParams<{ typeCreation: ModalAddAccountProps['type'] }>();\n\n  const dispatch = useDispatch();\n\n  const [showMenu, setShowMenu] = useState<EntityId | false>(false);\n\n  const accounts = useSelector(selectAccounts);\n\n  const onSetShowMenu = (show: EntityId | false) => {\n    return () => {\n      setShowMenu(show);\n    };\n  };\n\n  const onClickDelete = () => {\n    onConfirm({\n      description:\n        'Account will be deleted from the app but not from your google drive.',\n      onConfirm: () => {\n        if (showMenu === false) return;\n        setShowMenu(false);\n        dispatch(removeAccount(showMenu));\n        onDeleteAccount(showMenu as string);\n      },\n    });\n  };\n\n  const onAddRowModal = () => {\n    if (!showMenu) return;\n\n    const { buckets } = getAccountDetails(accounts, showMenu);\n\n    setShowMenu(false);\n    rowController.open({\n      account_id: showMenu as EntityId,\n      category: buckets.ids.length > 0 ? buckets.ids[0] : '',\n    });\n  };\n\n  return {\n    accounts,\n    typeCreation,\n    showMenu,\n    onSetShowMenu,\n    onClickDelete,\n    onAddRowModal,\n  };\n};\n","import styled from 'styled-components/macro';\n\nexport const AccountsContainer = styled.div`\n  height: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n\n  .inner-container {\n    padding: 0 40px;\n    width: 100%;\n  }\n\n  .accounts-list {\n    margin-bottom: 20px;\n  }\n\n  .add-account-btn {\n    width: 100%;\n    background-color: ${(props) => props.theme.colors.background2};\n    color: #fff;\n    padding: 20px;\n  }\n`;\n","import { setAlert } from 'components/alert';\nimport { importAccounts, loadAccounts } from 'components/redux/slices/accounts';\nimport { initialiseDatabase } from 'components/schemas';\nimport { createSpreadsheet, treatGoogleAPIError } from 'components/sheet-api';\nimport { Status } from 'components/util/status';\nimport { useStateStatus } from 'components/util/use-state-status';\nimport React, { useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport { accountExists, onAddAccount } from '../accounts.service';\nimport {\n  ModalAddAccountErrors,\n  ModalAddAccountProps,\n  ModalAddAccountStateInterface,\n} from './modal-add-account.interface';\n\nexport const useModalAddAccountState = (props: ModalAddAccountProps) => {\n  const history = useHistory();\n  const [state, setState] = useStateStatus<ModalAddAccountStateInterface>({\n    status: Status.loaded,\n    title: '',\n    url: '',\n    show: !!props.type,\n    error: {},\n  });\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    setState({ show: !!props.type });\n  }, [props.type, setState]);\n\n  const onModalClose = () => {\n    history.push('/');\n  };\n\n  const onCancel = () => {\n    setState({ show: false });\n  };\n\n  const onImport = async () => {\n    if (!state.url.trim()) {\n      return setState({\n        error: {\n          url: ModalAddAccountErrors.missingUrl,\n        },\n      });\n    }\n    const found = state.url.match(\n      /^https:\\/\\/docs\\.google\\.com\\/spreadsheets\\/d\\/([^/]*)(\\/.*)?$/\n    );\n    if (!found || !found[1]) {\n      return setState({\n        error: {\n          url: ModalAddAccountErrors.invalidUrl,\n        },\n      });\n    }\n\n    if (accountExists(found[1])) {\n      return setState({\n        error: {\n          url: ModalAddAccountErrors.accountExists,\n        },\n      });\n    }\n\n    setState({ status: Status.loading, error: {} });\n\n    try {\n      // Verify if ID is correct\n      const accounts = await initialiseDatabase([found[1]]);\n\n      const hasError = accounts.find((account) => account.error);\n\n      if (hasError) throw new Error(hasError.error as string);\n\n      dispatch(loadAccounts(accounts));\n\n      onAddAccount(found[1]);\n\n      setAlert('Account created successfully', 'success');\n      return setState({\n        status: Status.loaded,\n        show: false,\n      });\n    } catch (error: any) {\n      return setState({\n        status: Status.loaded,\n        error: { url: treatGoogleAPIError(error) },\n      });\n    }\n  };\n\n  const onCreateAccount = async () => {\n    if (!state.title.trim()) {\n      return setState({\n        error: {\n          url: ModalAddAccountErrors.missingUrl,\n        },\n      });\n    }\n\n    setState({ status: Status.loading, error: {} });\n\n    try {\n      const response = await createSpreadsheet(state.title);\n      const spreadsheetId = response.result.spreadsheetId;\n\n      if (!spreadsheetId) throw new Error('Spreadsheet not returned from api');\n\n      dispatch(importAccounts([spreadsheetId]));\n      onAddAccount(spreadsheetId);\n\n      setAlert('Account created successfully', 'success');\n      return setState({\n        status: Status.loaded,\n        show: false,\n      });\n    } catch (error: any) {\n      return setState({\n        status: Status.loaded,\n        error: { url: treatGoogleAPIError(error) },\n      });\n    }\n  };\n\n  const handleCreateButton = () => {\n    if (props.type === 'import-account') {\n      return onImport();\n    }\n\n    if (props.type === 'create-account') {\n      return onCreateAccount();\n    }\n  };\n\n  const onChangeValue = (type: 'url' | 'title') => {\n    return (ev: React.ChangeEvent<HTMLInputElement>) => {\n      setState({ [type]: ev.target.value });\n    };\n  };\n\n  return {\n    type: props.type,\n    state,\n    onModalClose,\n    onCancel,\n    handleCreateButton,\n    onChangeValue,\n  };\n};\n","import React from 'react';\nimport { Form } from 'react-bootstrap';\nimport { Link } from 'react-router-dom';\nimport { useModalAddAccountState } from './modal-add-account.hook';\nimport { ModalAddAccountProps } from './modal-add-account.interface';\nimport BottomModal from 'components/ui-components/bottom-modal';\n\nexport const ModalAddAccount: React.FC<ModalAddAccountProps> = (props) => {\n  const {\n    state,\n    type,\n    onCancel,\n    onModalClose,\n    handleCreateButton,\n    onChangeValue,\n  } = useModalAddAccountState(props);\n\n  return (\n    <BottomModal show={state.show} onClose={onModalClose}>\n      {type === 'create-account' ? (\n        <>\n          <BottomModal.Title>Create Account</BottomModal.Title>\n          <BottomModal.Disclaimer>\n            Accounts are based on spreadsheets in your google account. You can\n            create a new spreadsheet by filling the title below. If you rather\n            import an existent spreadsheet{' '}\n            <Link to=\"/import-account\">Click here</Link>\n          </BottomModal.Disclaimer>\n\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Spreadsheet Title\"\n              disabled={state.disabled}\n              value={state.title}\n              onChange={onChangeValue('title')}\n            />\n            {state.error.title && (\n              <Form.Control.Feedback\n                type=\"invalid\"\n                style={{ display: 'block' }}\n              >\n                {state.error.title}\n              </Form.Control.Feedback>\n            )}\n          </Form.Group>\n        </>\n      ) : type === 'import-account' ? (\n        <>\n          <BottomModal.Title>Import Account</BottomModal.Title>\n          <BottomModal.Disclaimer>\n            Accounts are based on spreadsheets in your google account. You can\n            import a spreadsheet by filling its URL below. If you rather create\n            a new spreadsheet <Link to=\"/create-account\">Click here</Link>\n          </BottomModal.Disclaimer>\n\n          <Form.Group>\n            <Form.Control\n              type=\"text\"\n              placeholder=\"Spreadsheet URL\"\n              disabled={state.disabled}\n              value={state.url}\n              onChange={onChangeValue('url')}\n            />\n            {state.error.url && (\n              <Form.Control.Feedback\n                type=\"invalid\"\n                style={{ display: 'block' }}\n              >\n                {state.error.url}\n              </Form.Control.Feedback>\n            )}\n          </Form.Group>\n        </>\n      ) : null}\n      <BottomModal.Button\n        variant=\"primary\"\n        disabled={state.disabled}\n        onClick={handleCreateButton}\n      >\n        {type === 'create-account' ? 'Create Account' : 'Import Account'}\n      </BottomModal.Button>\n      <BottomModal.Button disabled={state.disabled} onClick={onCancel}>\n        Cancel\n      </BottomModal.Button>\n    </BottomModal>\n  );\n};\n","import styled from 'styled-components/macro';\n\nexport const NoAccountContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  text-align: center;\n\n  .icon {\n    width: 80px;\n    height: 80px;\n  }\n`;\n","import { faMoneyCheckAlt } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport React from 'react';\nimport { NoAccountContainer } from './no-account.styled';\n\nexport const NoAccount: React.FC = () => {\n  return (\n    <NoAccountContainer>\n      <FontAwesomeIcon icon={faMoneyCheckAlt} className=\"icon\" />\n      <p>\n        You don't have any account. Start setting up one by clicking the button\n        below\n      </p>\n    </NoAccountContainer>\n  );\n};\n","import { AccountInterface } from 'components/redux/slices/accounts/accounts.interface';\nimport { BottomMenu } from 'components/ui-components/bottom-menu';\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { Account } from './account';\nimport { useAccountsState } from './accounts.hook';\nimport { AccountsContainer } from './accounts.styled';\nimport { ModalAddAccount } from './modal-add-account';\nimport { NoAccount } from './no-account';\n\nexport const Main: React.FC = () => {\n  const {\n    accounts,\n    typeCreation,\n    showMenu,\n    onSetShowMenu,\n    onClickDelete,\n    onAddRowModal,\n  } = useAccountsState();\n\n  return (\n    <AccountsContainer>\n      {accounts.ids.length > 0 ? (\n        <div className=\"inner-container accounts-list\">\n          {accounts.ids.map((id, i) => {\n            if (!accounts.entities[id]) return null;\n            return (\n              <Account\n                key={i}\n                account={accounts.entities[id] as AccountInterface}\n                onShowMenu={onSetShowMenu}\n              />\n            );\n          })}\n        </div>\n      ) : (\n        <div className=\"inner-container\">\n          <NoAccount />\n        </div>\n      )}\n      <div className=\"inner-container\">\n        <Link to=\"/import-account\" className=\"add-account-btn btn\">\n          <i className=\"fas fa-plus\" /> Add Account\n        </Link>\n      </div>\n      {typeCreation && <ModalAddAccount type={typeCreation} />}\n      <BottomMenu\n        show={!!showMenu}\n        menu={[\n          [\n            { label: 'Add Row', onClick: onAddRowModal },\n            {\n              label: 'Delete',\n              className: 'text-danger',\n              onClick: onClickDelete,\n            },\n          ],\n          [{ label: 'Cancel', onClick: onSetShowMenu(false) }],\n        ]}\n      >\n        {!!showMenu && <strong>{accounts.entities[showMenu]?.title}</strong>}\n      </BottomMenu>\n    </AccountsContainer>\n  );\n};\n","import React from 'react';\nimport { HashRouter, Switch } from 'react-router-dom';\nimport { AuthRoute } from './auth-route';\nimport { Main } from 'components/accounts';\n\nexport const Router: React.FC = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <AuthRoute path=\"/:typeCreation\" component={Main} />\n        <AuthRoute path=\"/\" component={Main} />\n      </Switch>\n    </HashRouter>\n  );\n};\n","import { Container } from 'react-bootstrap';\nimport styled from 'styled-components/macro';\n\nexport const SettingsContainer = styled(Container)`\n  padding-top: 50px;\n\n  h1 {\n    margin-bottom: 40px;\n  }\n`;\n","import React from 'react';\nimport { SettingsContainer } from './settings.styled';\nimport { Form, Button } from 'react-bootstrap';\nimport { useSettingsState } from './settings.hook';\n\nexport const Settings: React.FC = () => {\n  const { state, onChangeClient, onSave } = useSettingsState();\n\n  return (\n    <SettingsContainer>\n      <h1>Authenticate</h1>\n      <p>\n        In order for this project to work, we need you to create a new project\n        on{' '}\n        <a\n          href=\"https://console.developers.google.com\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          https://console.developers.google.com\n        </a>\n        .\n      </p>\n      <p>\n        Create a new project and OAUTH 2.0 credential and add the Client ID\n        below. This information will be retained on your device and we will not\n        save it online\n      </p>\n      <p>\n        To know more about how create credentials{' '}\n        <a\n          href=\"https://developers.google.com/workspace/guides/create-credentials\"\n          target=\"_blank\"\n          rel=\"noreferrer\"\n        >\n          click here <i className=\"fas fa-external-link-alt\" />\n        </a>\n      </p>\n      <hr />\n      <Form>\n        <Form.Group className=\"mb-3\">\n          <Form.Label>Client ID</Form.Label>\n          <Form.Control\n            type=\"text\"\n            placeholder=\"Enter Client ID from Oauth 2\"\n            value={state.client_id}\n            onChange={onChangeClient}\n          />\n          {state.error.client_id && (\n            <Form.Control.Feedback type=\"invalid\" style={{ display: 'block' }}>\n              {state.error.client_id}\n            </Form.Control.Feedback>\n          )}\n        </Form.Group>\n      </Form>\n      <div className=\"d-grid\">\n        <Button variant=\"success\" onClick={onSave}>\n          Save\n        </Button>\n      </div>\n    </SettingsContainer>\n  );\n};\n","import {\n  getGlobalSettings,\n  setGlobalSettings,\n} from 'components/global-settings';\nimport { useStateStatus } from 'components/util/use-state-status';\nimport React from 'react';\nimport { SettingsStateInterface } from './settings.interface';\n\nexport const useSettingsState = () => {\n  const globalSettings = getGlobalSettings();\n\n  const [state, setState] = useStateStatus<SettingsStateInterface>({\n    client_id: globalSettings.client_id,\n    error: {},\n  });\n\n  const onChangeClient = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    setState({\n      client_id: ev.target.value,\n      error: {\n        ...state.error,\n        client_id: undefined,\n      },\n    });\n  };\n\n  const onSave = () => {\n    if (!state.client_id.trim()) {\n      return setState({\n        error: {\n          ...state.error,\n          client_id: 'Client ID required',\n        },\n      });\n    }\n\n    setGlobalSettings({ client_id: state.client_id });\n    window.location.reload();\n  };\n\n  return { state, onChangeClient, onSave };\n};\n","import styled from 'styled-components/macro';\n\nexport const SplashScreenContainer = styled.div`\n  height: 100%;\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n\n  .splash-screen-inner {\n    font-size: 25px;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    .splash-screen-spinner {\n      display: block;\n      font-size: 40px;\n      color: ${(props) => props.theme.colors.primary};\n    }\n  }\n`;\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport * as React from 'react';\nimport { SplashScreenInterface } from './splash-screen.interface';\nimport { SplashScreenContainer } from './splash-screen.styled';\nimport { faFan } from '@fortawesome/free-solid-svg-icons';\n\nexport const SplashScreen: React.FC<SplashScreenInterface> = ({\n  hasSpinner,\n  children,\n}) => {\n  return (\n    <SplashScreenContainer>\n      <div className=\"splash-screen-inner\">\n        {hasSpinner && (\n          <div>\n            <FontAwesomeIcon\n              icon={faFan}\n              spin\n              className=\"splash-screen-spinner\"\n            />\n          </div>\n        )}\n        {children}\n      </div>\n    </SplashScreenContainer>\n  );\n};\n","import { Login } from 'components/login';\nimport { Router } from 'components/router';\nimport { Settings } from 'components/settings';\nimport { SplashScreen } from 'components/splash-screen';\nimport { Status } from 'components/util/status';\nimport React from 'react';\nimport { useMainState } from './main.hook';\n\nexport const Main: React.FC = () => {\n  const { state } = useMainState();\n\n  if (state.status === Status.initializing)\n    return <SplashScreen hasSpinner={true}>Initialising</SplashScreen>;\n\n  if (!state.authenticated) return <Settings />;\n\n  if (!state.signedin) return <Login />;\n\n  return <Router />;\n};\n","import { setAlert } from 'components/alert';\nimport { getGlobalSettings } from 'components/global-settings';\nimport { selectAuth } from 'components/redux/selectors/auth';\nimport { importAccounts } from 'components/redux/slices/accounts';\nimport { setAuth } from 'components/redux/slices/auth';\nimport {\n  authenticate,\n  isSignedIn,\n  subscribeUserSignedStatus,\n} from 'components/sheet-api';\nimport { Status } from 'components/util/status';\nimport { useCallback, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const useMainState = () => {\n  const dispatch = useDispatch();\n  const state = useSelector(selectAuth);\n\n  const setState = useCallback(\n    (_state: Partial<typeof state>) => {\n      dispatch(setAuth(_state));\n    },\n    [dispatch]\n  );\n\n  // Verify if app is authenticated\n  useEffect(() => {\n    let mounted = true;\n    const settings = getGlobalSettings();\n    const { client_id } = settings;\n\n    const notAuthenticated = () => {\n      if (!mounted) return;\n      return setState({\n        authenticated: false,\n        signedin: false,\n        status: Status.loaded,\n      });\n    };\n\n    if (!client_id) {\n      // App does not have settings to be authenticated. Redirect user for authentication\n      return notAuthenticated();\n    } else {\n      // Verify if authentication is valid\n      authenticate()\n        .then(async () => {\n          // App authenticated, check if user is logged in\n          subscribeUserSignedStatus((signedin: boolean) => {\n            if (!mounted) return;\n            return setState({\n              signedin,\n            });\n          });\n\n          dispatch(importAccounts(settings.accounts));\n\n          return setState({\n            status: Status.loaded,\n            authenticated: true,\n            signedin: isSignedIn(),\n          });\n        })\n        .catch((reason) => {\n          if (!mounted) return;\n          setAlert(reason, 'danger');\n          notAuthenticated();\n        });\n    }\n\n    return () => {\n      mounted = false;\n    };\n  }, [setState, dispatch]);\n\n  // const onAddAccount = async (spreadsheetId: string) => {\n  //   const details = await initialiseDatabase([spreadsheetId]);\n  //   const accounts = details.reduce(\n  //     (acc, curr) => {\n  //       return {\n  //         ids: [...acc.ids, curr.spreadsheetId],\n  //         entities: {\n  //           ...acc.entities,\n  //           [curr.spreadsheetId]: { ...curr },\n  //         },\n  //       };\n  //     },\n  //     { ...state.accounts }\n  //   );\n\n  //   const globalSettings = getGlobalSettings();\n  //   setGlobalSettings({\n  //     accounts: [...globalSettings.accounts, spreadsheetId],\n  //   });\n  //   setState({ accounts });\n  // };\n\n  // const initialiseAccounts = async () => {\n  //   const details = await initialiseDatabase(state.accounts.ids);\n  //   const accounts = details.reduce(\n  //     (acc, curr) => {\n  //       return {\n  //         ids: acc.ids.includes(curr.spreadsheetId)\n  //           ? acc.ids\n  //           : [...acc.ids, curr.spreadsheetId],\n  //         entities: {\n  //           ...acc.entities,\n  //           [curr.spreadsheetId]: { ...curr },\n  //         },\n  //       };\n  //     },\n  //     { ...state.accounts }\n  //   );\n\n  //   console.log(accounts);\n  //   setState({ accounts });\n  // };\n\n  return {\n    state,\n  };\n};\n","import styled, { css } from 'styled-components/macro';\nimport { BlackModalStyledInterface } from './black-modal.interface';\n\nexport const blackModalTransitionTime = 250;\nexport const topSpacing = 50;\n\nexport const BlackModalContainer = styled.div<BlackModalStyledInterface>`\n  ${(props) => css`\n    position: fixed;\n    top: 0;\n    bottom: 0;\n    width: 100%;\n    background-color: rgba(0, 0, 0, ${props.show ? 0.7 : 0});\n    transition: background-color ${blackModalTransitionTime}ms ease-in;\n\n    .row-modal-inner {\n      background-color: rgb(28, 28, 28);\n      position: fixed;\n      height: calc(100% - ${topSpacing}px);\n      width: 100%;\n      border-radius: 15px 15px 0 0;\n      color: #fff;\n      padding: 30px 20px;\n      padding-bottom: ${(props) => props.theme.device.paddingBottom};\n      transition: bottom ${blackModalTransitionTime}ms ease-in;\n\n      bottom: ${props.show ? 0 : '-100vh'};\n    }\n\n    hr {\n      background-color: ${props.theme.colors.gray2};\n      opacity: 1;\n      height: 2px;\n    }\n  `}\n`;\n\nexport const BlackModalTitle = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n\n  .black-modal-title-left-button,\n  .black-modal-title-right-button {\n    button {\n      color: #fff;\n    }\n  }\n`;\n","import React from 'react';\nimport { useBlackModalState } from './black-modal.hook';\nimport { BlackModalProps, BlackModalTitleProps } from './black-modal.interface';\nimport { BlackModalContainer, BlackModalTitle } from './black-modal.styled';\n\nexport const BlackModal: React.FC<BlackModalProps> = (props) => {\n  const { render, show } = useBlackModalState(props);\n\n  if (!render) return null;\n\n  return (\n    <BlackModalContainer show={show}>\n      <div className=\"row-modal-inner\">{props.children}</div>\n    </BlackModalContainer>\n  );\n};\n\nexport const Title: React.FC<BlackModalTitleProps> = (props) => {\n  return (\n    <BlackModalTitle>\n      {props.leftButton && (\n        <div className=\"black-modal-title-left-button\">{props.leftButton}</div>\n      )}\n      <h4>{props.children}</h4>\n      {props.rightButton && (\n        <div className=\"black-modal-title-right-button\">\n          {props.rightButton}\n        </div>\n      )}\n    </BlackModalTitle>\n  );\n};\n\nconst components = {\n  Title,\n};\n\nexport default Object.assign(BlackModal, components);\n","import { useLayoutEffect, useState } from 'react';\nimport { BlackModalProps } from './black-modal.interface';\nimport { blackModalTransitionTime } from './black-modal.styled';\n\nexport const useBlackModalState = (props: BlackModalProps) => {\n  const { open } = props;\n\n  const [render, setRender] = useState(false);\n  const [show, setShow] = useState(false);\n\n  useLayoutEffect(() => {\n    let mounted = true;\n    if (open && !render && !show) {\n      setRender(true);\n    } else if (open && render && !show) {\n      setTimeout(() => {\n        if (!mounted) return;\n        setShow(true);\n      }, 1);\n    } else if (!open && render && show) {\n      setShow(false);\n    } else if (!open && render && !show) {\n      setTimeout(() => {\n        if (!mounted) return;\n        setRender(false);\n      }, blackModalTransitionTime);\n    }\n\n    return () => {\n      mounted = false;\n    };\n  }, [open, render, show]);\n\n  return {\n    show,\n    render,\n  };\n};\n","import React, { useContext } from 'react';\nimport { RowModalContextInterface } from './row-modal-context.interface';\n\nexport const RowModalContext = React.createContext<RowModalContextInterface>({\n  state: {\n    type: 'expense',\n    amount: '0',\n    message: '',\n    view: 'main',\n  },\n  typeOptions: [],\n  decimal: '0',\n  integer: '00',\n  accounts: {\n    ids: [],\n    entities: {},\n  },\n  onSelectType: () => {\n    // Not Implemented\n  },\n  onKeyPressAmount: () => {\n    // Not Implemented\n  },\n  onSetDescription: () => {\n    // Not Implemented\n  },\n  setState: () => {\n    // Not Implemented\n  },\n});\n\nexport const useRowModalContext = () => {\n  return useContext(RowModalContext);\n};\n","import styled from 'styled-components/macro';\n\nexport const topSpacing = 50;\n\nexport const RowModalContainer = styled.div`\n  .right-border {\n    border-right: solid 2px ${(props) => props.theme.colors.gray2};\n  }\n\n  .button-close-modal {\n    color: #fff;\n    border-radius: 50%;\n    background-color: rgba(255, 255, 255, 0.13);\n    width: 30px;\n    height: 30px;\n    padding: 0;\n  }\n\n  .row-modal-selected-account {\n    margin-top: 25px;\n    display: flex;\n    align-items: center;\n\n    .account-details {\n      flex-grow: 1;\n      h5 {\n        font-size: 1rem;\n      }\n      span {\n        color: ${(props) => props.theme.colors.gray};\n        font-size: 0.9rem;\n\n        .icon {\n          margin-right: 10px;\n        }\n      }\n    }\n\n    .account-more {\n      .icon {\n        color: #fff;\n      }\n    }\n  }\n\n  .account-row-details {\n    margin-top: 30px;\n  }\n\n  .half-block {\n    width: 50%;\n  }\n\n  .account-block {\n    padding: 0 10px;\n\n    strong {\n      display: block;\n      color: ${(props) => props.theme.colors.gray};\n      font-weight: 500;\n      font-size: 1rem;\n      margin-bottom: 10px;\n    }\n\n    span {\n      font-weight: 100;\n      font-size: 1.3rem;\n    }\n  }\n\n  .input-description {\n    width: 100%;\n    border: 0;\n    border-bottom: solid 2px ${(props) => props.theme.colors.gray2};\n    background-color: transparent;\n    color: #fff;\n    font-size: 0.9rem;\n    font-weight: 100;\n\n    &:focus {\n      outline: none;\n    }\n  }\n\n  .account-amount {\n    font-size: 3rem;\n    text-align: center;\n    margin-top: 20px;\n    color: ${(props) => props.theme.colors.gray};\n    position: relative;\n\n    hr {\n      opacity: 0;\n      margin-bottom: 0;\n    }\n\n    .input-amount:focus ~ hr {\n      opacity: 1;\n    }\n\n    .dollar-sign {\n      font-size: 3.3rem;\n    }\n\n    .integer-part {\n      color: #fff;\n    }\n\n    .input-amount {\n      position: absolute;\n      top: 0;\n      left: 0;\n      right: 0;\n      bottom: 0;\n      width: 100%;\n      opacity: 0;\n      display: block;\n    }\n\n    &.expense {\n      color: rgba(140, 120, 120);\n\n      .integer-part {\n        color: rgba(255, 120, 120);\n      }\n    }\n  }\n\n  .add-row-button {\n    background-color: ${(props) => props.theme.colors.background};\n    width: 100%;\n    margin-top: 30px;\n    padding: 20px;\n    border-radius: 5px;\n  }\n`;\n","import styled, { css } from 'styled-components/macro';\nimport { TogglerProps } from './toggler.interface';\n\nexport const TogglerContainer = styled.div<TogglerProps>`\n  ${(props) => {\n    const width = 100 / (props.options.length || 1);\n    const left = props.options.findIndex(\n      (option) => option.value === props.value\n    );\n\n    const padding = 5;\n\n    return css`\n      background: #000;\n      width: 80%;\n      margin: 20px auto;\n      border-radius: 5px;\n      display: flex;\n      position: relative;\n\n      .toggler-option-container {\n        width: ${width}%;\n        text-align: center;\n        z-index: 1;\n\n        .toggler-option-button {\n          color: #fff;\n          padding: 15px 10px;\n          border-radius: 5px;\n          width: 100%;\n        }\n      }\n\n      ${left >= 0 &&\n      css`\n        &:before {\n          border-radius: 5px;\n          content: '';\n          display: block;\n          background: rgb(28, 28, 28);\n          position: absolute;\n          top: ${padding}px;\n          left: calc(${width * left}% + ${padding}px);\n          bottom: ${padding}px;\n          width: calc(${width}% - ${padding * 2}px);\n          transition: left 0.25s ease-out;\n        }\n      `}\n    `;\n  }}\n`;\n","import classNames from 'classnames';\nimport React from 'react';\nimport { TogglerOption, TogglerProps } from './toggler.interface';\nimport { TogglerContainer } from './toggler.styled';\n\nexport const Toggler: React.FC<TogglerProps> = (props) => {\n  const { onChange, ...containerProps } = props;\n  const { options, classes, disabled } = containerProps;\n\n  const onClickOption = (option: TogglerOption) => {\n    return () => {\n      if (onChange) {\n        return onChange(option);\n      }\n    };\n  };\n\n  return (\n    <TogglerContainer {...containerProps}>\n      {options.map((option, index) => (\n        <div\n          key={index}\n          className={classNames(\n            'toggler-option-container',\n            classes?.optionContainer\n          )}\n        >\n          <button\n            className={classNames(\n              'toggler-option-button',\n              classes?.optionButton\n            )}\n            disabled={disabled}\n            onClick={onClickOption(option)}\n          >\n            {option.label}\n          </button>\n        </div>\n      ))}\n    </TogglerContainer>\n  );\n};\n","import {\n  faChevronRight,\n  faCreditCard,\n  faTimes,\n} from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport classNames from 'classnames';\nimport { Toggler } from 'components/ui-components/toggler';\nimport React from 'react';\nimport { useRowModalContext } from '../../context/row-modal-context';\nimport BlackModal from 'components/ui-components/black-modal';\nimport { format, parseISO } from 'date-fns';\n\nexport const RowMainView: React.FC = () => {\n  const {\n    state,\n    typeOptions,\n    integer,\n    decimal,\n    selectedAccount,\n    onSelectType,\n    onSetDescription,\n    onKeyPressAmount,\n    setState,\n  } = useRowModalContext();\n\n  const onSelectAccount = () => {\n    setState({ view: 'select-account' });\n  };\n\n  const onClose = () => {\n    setState({ open: false });\n  };\n\n  return (\n    <>\n      <BlackModal.Title\n        rightButton={\n          <button onClick={onClose}>\n            <FontAwesomeIcon icon={faTimes} />\n          </button>\n        }\n      >\n        Transaction\n      </BlackModal.Title>\n\n      <div className=\"row-modal-selected-account\">\n        <div className=\"account-details\">\n          <h5>{selectedAccount?.title || state.account_id}</h5>\n          <span>\n            <FontAwesomeIcon icon={faCreditCard} className=\"icon\" /> Selected\n            Account\n          </span>\n        </div>\n        <div className=\"account-more\">\n          <button className=\"btn-select-account\" onClick={onSelectAccount}>\n            <FontAwesomeIcon icon={faChevronRight} className=\"icon\" />\n          </button>\n        </div>\n      </div>\n      <hr />\n      <div className=\"flex account-row-details\">\n        <div className=\"account-block half-block right-border\">\n          <strong>Category</strong>\n          <span>{state.category || 'UNKNOWN'}</span>\n        </div>\n        <div className=\"account-block half-block\">\n          <strong>Date</strong>\n          <span>{format(parseISO(state.date), 'dd/MM/yyyy')}</span>\n        </div>\n      </div>\n      <hr />\n      <div className=\"account-row-details\">\n        <div className=\"account-block\">\n          <strong>\n            Description <small>(optional)</small>\n          </strong>\n          <input\n            className=\"input-description\"\n            value={state.message}\n            onChange={onSetDescription}\n          />\n        </div>\n      </div>\n\n      <Toggler\n        value={state.type}\n        options={typeOptions}\n        onChange={onSelectType}\n      />\n\n      <div className={classNames('account-amount', state.type)}>\n        <span className=\"dollar-sign\">\n          {state.type === 'expense' ? '-$' : '$'}\n        </span>\n        <span className=\"integer-part\">{integer}</span>\n        <span className=\"decimal-part\">.{decimal}</span>\n\n        <input\n          className=\"input-amount\"\n          type=\"number\"\n          onKeyDown={onKeyPressAmount}\n          inputMode=\"decimal\"\n        />\n        <hr />\n      </div>\n\n      <button className=\"add-row-button\">Save Transaction</button>\n    </>\n  );\n};\n","import React from 'react';\nimport { BlackModal } from '../black-modal/black-modal';\nimport { RowModalContext } from './context/row-modal-context';\nimport { useRowModal } from './row-modal.hook';\nimport { RowModalContainer } from './row-modal.styled';\nimport { RowMainView } from './views/main/main';\n\nexport const RowModal: React.FC = () => {\n  const value = useRowModal();\n  const {\n    state: { open },\n  } = value;\n\n  return (\n    <RowModalContainer>\n      <RowModalContext.Provider value={value}>\n        <BlackModal open={open}>\n          <RowMainView />\n        </BlackModal>\n      </RowModalContext.Provider>\n    </RowModalContainer>\n  );\n};\n","import React from 'react';\nimport { LayoutTheme } from 'components/global-style';\nimport { AlertsCreator } from 'components/alert';\nimport { ConfirmModal } from 'components/ui-components/confirm-modal/confirm-modal';\nimport { store } from 'components/redux/store';\nimport { Provider } from 'react-redux';\nimport { Main } from './main';\nimport { RowModal } from 'components/ui-components/row-modal';\n\nexport const App: React.FC = () => {\n  return (\n    <Provider store={store}>\n      <LayoutTheme>\n        <Main />\n        <AlertsCreator />\n        <ConfirmModal />\n        <RowModal />\n      </LayoutTheme>\n    </Provider>\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { App } from './components/app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}